{
	// Place your Python workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"For28": {
        "prefix": "py",
        "body": [
			"from __future__ import print_function",
			"import sys",
			"import os.path",
			"import math",
			"import collections",
			"if os.path.isfile(\"test.inp\"):",
			"\tsys.stdin = open(\"test.inp\", \"r\")",
			"\tsys.stdout = open(\"test.out\", \"w\")",
			"elif os.path.isfile(\"${TM_FILENAME_BASE}.inp\"):",
			"\tsys.stdin = open(\"${TM_FILENAME_BASE}.inp\", \"r\")",
			"\tsys.stdin = open(\"${TM_FILENAME_BASE}.out\", \"w\")",
			"def eprint(*args, **kwargs):",
			"\tprint(*args, file=sys.stderr, **kwargs)",
			"def erange (a, b):",
			"\treturn range (a, b + 1)",
			"ntest = 1",
			"#ntest = int(input())",
			"for itest in erange(1, ntest):",
			"\t",
        ],
        "description": "For Loop"
    },
}